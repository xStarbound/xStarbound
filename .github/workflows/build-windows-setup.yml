name: Build Windows Setup

on: workflow_dispatch

jobs:
  windows-setup:
    name: Build xStarbound for Windows
    runs-on: windows-latest

    steps:
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Configure CMake
        env:
          VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
        run: |
          cmake --preset "windows-x64" -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/xstarbound-install" -DPACKAGE_XSB_ASSETS=ON
          # Clean up vcpkg temp dirs to save space
          Remove-Item $Env:VCPKG_INSTALLATION_ROOT\buildtrees\ -Force -Recurse -ErrorAction Continue
          Remove-Item $Env:VCPKG_INSTALLATION_ROOT\downloads\ -Force -Recurse -ErrorAction Continue

      - name: Build Release
        run: cmake --build --preset "windows-x64-release" --target INSTALL

      - name: Copy DLLs
        run: |
          Set-Content -Value '211820' -Path "${{ github.workspace }}\xstarbound-install\xsb-win64\steam_appid.txt" -NoNewline
          Copy-Item -Path "${{ github.workspace }}\cmake-build-windows-x64\source\client\RelWithDebInfo\*.dll" -Destination "${{ github.workspace }}\xstarbound-install\xsb-win64\" -Force
          Copy-Item -Path "${{ github.workspace }}\cmake-build-windows-x64\source\server\RelWithDebInfo\*.dll" -Destination "${{ github.workspace }}\xstarbound-install\xsb-win64\" -Force
          Copy-Item -Path "${{ github.workspace }}\cmake-build-windows-x64\source\utility\RelWithDebInfo\*.dll" -Destination "${{ github.workspace }}\xstarbound-install\xsb-win64\" -Force

      - name: Install Inno Setup # From Novaenia.
        run: |
          echo "Checking pre-installation..."

          set "ISCC_PATH=%programfiles(x86)%\Inno Setup 6\ISCC.exe"

          if exist "%ISCC_PATH%" (
            echo ::warning::Inno Setup is already installed
            exit /b 0
          )

          echo "Downloading Inno Setup..."

          set "_url_=https://jrsoftware.org/download.php/is.exe?site=1"
          set "_file_=innosetup.exe"

          curl -L -o "%tmp%\%_file_%" "%_url_%"

          echo "Installing Inno Setup..."
          "%tmp%\%_file_%" /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /SP-

          if not exist "%ISCC_PATH%" (
            echo "::error::Inno Setup installation failed"
            exit 1
          )

          echo ::warning::Inno Setup installed successfully!
        shell: cmd

      - name: Create Setup
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
        with:
          path: "cmake-build-windows-x64/inno-installer/xsb-installer.iss"

      - name: Upload Setup EXE
        uses: actions/upload-artifact@v4
        with:
          name: windows-x64-setup
          path: cmake-build-windows-x64/inno-installer/compiled/windows-install.exe
          compression-level: 0

      - name: Upload ZIP Archive
        uses: actions/upload-artifact@v4
        with:
          name: windows-x64-archive
          path: xstarbound-install/*
          compression-level: 9

      - name: Upload Debug Symbols
        uses: actions/upload-artifact@v4
        with:
          name: windows-x64-debug-symbols
          path: cmake-build-windows-x64/PDB/
          compression-level: 9
